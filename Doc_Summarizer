import streamlit as st
from PyPDF2 import PdfReader
from docx import Document
from openai import OpenAI

# Function to read a PDF file and extract text
def read_pdf(file):
    reader = PdfReader(file)
    text = ""
    for page in reader.pages:
        text += page.extract_text()
    return text

# Function to read a Word (.docx) file and extract text
def read_word(file):
    doc = Document(file)
    text = "\n".join([para.text for para in doc.paragraphs])
    return text

# Function to analyze the document using OpenAI API (via client object)
def analyze_document(document_text, api_key):
    client = OpenAI(api_key=api_key)
    
    messages = [
        {"role": "system", "content": "You are a helpful assistant that analyzes documents."},
        {"role": "user", "content": f"Check the following document for content coverage, accuracy, readability, and understandability.\n\nDocument:\n{document_text}"}
    ]

    response = client.chat.completions.create(
        model="gpt-4",
        messages=messages,
        max_tokens=500,
        temperature=0.7
    )
    return response.choices[0].message['content']

# Streamlit app layout
st.title("Document Analyzer with OpenAI")

# Input field for OpenAI API Key
api_key = st.text_input("Enter your OpenAI API Key:", type="password")

# File upload widget
uploaded_file = st.file_uploader("Upload a PDF or DOCX file", type=["pdf", "docx"])

# If a file and API key are provided
if uploaded_file and api_key:
    # Check file type and extract text
    if uploaded_file.type == "application/pdf":
        document_text = read_pdf(uploaded_file)
    elif uploaded_file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
        document_text = read_word(uploaded_file)
    
    st.write("Extracted Text:")
    st.write(document_text)
    
    # Analyze the document using OpenAI
    if len(document_text) > 0:
        analysis = analyze_document(document_text, api_key)
        st.write("Document Analysis:")
        st.write(analysis)
    else:
        st.error("The document is empty or text could not be extracted.")
