# -*- coding: utf-8 -*-
"""Image_Generation_Diffusion model_HuggingFace

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LeAnp0QU1Zr4BeVP0rYmY7NImXp612tl
"""

import streamlit as st
import torch
from diffusers import StableDiffusionPipeline
from PIL import Image
import io

# Configuration class
class CFG:
    seed = 42
    device = "cuda" if torch.cuda.is_available() else "cpu"

    if device == "cuda":
        generator = torch.Generator('cuda').manual_seed(seed)
    else:
        generator = torch.Generator().manual_seed(seed)

    image_gen_steps = 35
    image_gen_model_id = "stabilityai/stable-diffusion-2"
    image_gen_size = (400, 400)
    image_gen_guidance_scale = 9

# Function to generate image
def generate_image(prompt, model, generator):
    image = model(
        prompt, num_inference_steps=CFG.image_gen_steps,
        generator=generator,
        guidance_scale=CFG.image_gen_guidance_scale
    ).images[0]

    image = image.resize(CFG.image_gen_size)
    return image

# Streamlit UI components
st.title("Image Generator designed by Keshav")

# Input field for Hugging Face token
hf_token = st.text_input("Enter your Hugging Face Token:", type="password")
prompt = st.text_input("Enter the image description (e.g., 'mickey mouse greeting users'):")

# Button to trigger image generation
if st.button("Generate Image"):
    if hf_token and prompt:
        with st.spinner("Generating image..."):
            try:
                # Load the Stable Diffusion model using the user's token
                image_gen_model = StableDiffusionPipeline.from_pretrained(
                    CFG.image_gen_model_id,
                    torch_dtype=torch.float16,
                    revision="fp16",
                    use_auth_token=hf_token
                )
                image_gen_model = image_gen_model.to(CFG.device)

                # Generate the image
                image = generate_image(prompt, image_gen_model, CFG.generator)

                # Convert the image to display in Streamlit
                st.image(image, caption="Generated Image", use_column_width=True)

            except Exception as e:
                st.error(f"An error occurred: {e}")
    else:
        st.warning("Please enter both your Hugging Face token and an image description.")